package com.BikkadIT.CrudRepositoryMethod.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Service;

import com.BikkadIT.CrudRepositoryMethod.Repository.UserRepository;
import com.BikkadIT.CrudRepositoryMethod.model.User;

@Service
public class UserServiceImpl implements UserServiceI {

	@Autowired
	private UserRepository userRepository;

	@Override
	public User saveUser(User user) {

		User user2 = userRepository.save(user);
		return user2;
	}

	@Override
	public List<User> saveAllUser(List<User> list) {
		Iterable<User> saveAll =userRepository.saveAll(list);
		return (List<User>) saveAll;
	}

	
	/* JPA REPOSITORY METHODS */
	
	@Override
	public Page<User> userPagination() {
		// TODO Auto-generated method stub
		PageRequest of = PageRequest.of(1, 3);
		Page<User> findAll = userRepository.findAll(of);
		return findAll;
	}

	@Override
	public List<User> sortingUser() {
		// TODO Auto-generated method stub
		List<User> findAll = userRepository.findAll(Sort.by("userId").descending());
		return findAll;
	}

	@Override
	public User getUserById1(int uid) {
		// TODO Auto-generated method stub
		User user = userRepository.findByuserId(uid);
		return user;
	}

	@Override
	public User getUserByname(String userName) {
		// TODO Auto-generated method stub
		User findByUsername = userRepository.findByuserName(userName);
		return findByUsername;
	}

	@Override
	public User getUserAddress(String useraddress) {
		// TODO Auto-generated method stub
		User user = userRepository.findByuserAddress(useraddress);
		return user;
	}

	@Override
	public User getUserAge(int userAge) {
		// TODO Auto-generated method stub
		User findByuserAge = userRepository.findByuserAge(userAge);
		return findByuserAge;
	}

	@Override
	public User getuserNameAnduserAddress(String uname, String uaddress) {
		// TODO Auto-generated method stub
		User user = userRepository.findByUserNameAndUserAddress(uname, uaddress);
		return user;
	}
	
	@Override
	public User getuserNameOruserAddress(String uname, String uaddress) {
		// TODO Auto-generated method stub
		User user = userRepository.findByUserNameOrUserAddress(uname, uaddress);
		return user;
	}

	@Override
	public List<User> getUserAgeGreaterThanEqual(int uage) {
		// TODO Auto-generated method stub
		List<User> equal = userRepository.findByUserAgeGreaterThanEqual(uage);
		return equal;
	}

	@Override
	public List<User> getUserAgeGreaterThan(int uage) {
		// TODO Auto-generated method stub
		List<User> equal1 = userRepository.findByUserAgeGreaterThan(uage);
		return equal1;
	}

	@Override
	public List<User> getUserAgeLessThanEqual(int uage) {
		// TODO Auto-generated method stub
		List<User> lessThanEqual = userRepository.findByUserAgeLessThanEqual(uage);
		return lessThanEqual;
	}

	@Override
	public List<User> getUserAgeLessThan(int uage) {
		// TODO Auto-generated method stub
		List<User> lessThan = userRepository.findByUserAgeLessThan(uage);
		return lessThan;
	}

	@Override
	public int countRecordsByName(String uname) {
		// TODO Auto-generated method stub
		int countByUserName = userRepository.countByUserName(uname);
		return countByUserName;
	}

	@Override
	public List<User> getUserAgeBetween(int age1, int age2) {
		// TODO Auto-generated method stub
		List<User> ageBetween = userRepository.findByUserAgeBetween(age1, age2);
		return ageBetween;
	}
}
